version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
    networks:
      - internal_network

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    restart: unless-stopped
    ports:
      - 3001:3001
    depends_on:
      - postgres
    networks:
      - internal_network
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/postgres?schema=public"

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - internal_network

  migration:
    container_name: migration
    build:
      context: .
      dockerfile: ./migration/Dockerfile
    depends_on:
      - postgres
    networks:
      - internal_network
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/postgres?schema=public"

  seed:
    container_name: seed
    build:
      context: .
      dockerfile: ./seed/Dockerfile
    depends_on:
      - postgres
      - migration
    networks:
      - internal_network
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/postgres?schema=public"

networks:
  internal_network:
    driver: bridge

volumes:
  postgres-data: